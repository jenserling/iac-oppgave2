name: 'Terraform CI/CD for prod Branch'


on:
  workflow_run:
    workflows: ["Terraform CI/CD for Stage Branch"]  # Name of the stage workflow file
    types:
      - completed
    branches:
      - stage

permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: read

jobs:
  terraform-tests-stage:
    name: 'Terraform Tests and Merge to Stage'
    
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2

      - name: 'Terraform Format'
        run: terraform fmt -check -recursive

      - name: 'Terraform Init'
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Terraform Validate'
        run: terraform validate

      - uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: 'latest'

      - name: 'Terraform Plan'
        run: terraform plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
         
      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/prod' # Only run this on the prod branch or adjust the condition as needed
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}