name: 'Terraform CI/CD for stage Branch'


on:
  workflow_run:
    workflows: ["Terraform CI/CD for dev Branch"]  # Name of the dev workflow file
    types:
      - completed
    branches:
      - dev

permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: read

jobs:
  terraform-tests-stage:
    name: 'Terraform Tests and Merge to Stage'
    
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2

      - name: 'Terraform Format'
        run: terraform fmt -check -recursive

      - name: 'Terraform Init'
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Terraform Validate'
        run: terraform validate

      - uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: 'latest'

      - name: 'Terraform Plan'
        run: terraform plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Setup SSH Key'
        uses: webfactory/ssh-agent@v0.5.3
        with:
         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
      - name: 'Fetch all branches from remote'
        run: git fetch --all
        
      - name: 'Checkout prod branch'
        run: git checkout -b prod --track origin/prod
        env:
            SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
            SSH_AGENT_PID: ${{ env.SSH_AGENT_PID }}
        
      - name: 'Merge stage into prod'
        run: |
            git merge --no-ff --allow-unrelated-histories -X theirs origin/stage -m "Merging stage into prod [skip ci]"
        
      - name: 'Push changes to prod branch'
        run: git push origin prod
        env:
            SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
            SSH_AGENT_PID: ${{ env.SSH_AGENT_PID }}
        
          