name: 'Terraform CI/CD for Stage Branch'

on:
  push:
    branches:
      - stage

permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: read

jobs:
  terraform-tests-stage:
    name: 'Terraform Tests and Merge to Stage'
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2

      - name: 'Terraform Format'
        run: terraform fmt -check -recursive

      - name: 'Terraform Init'
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Terraform Validate'
        run: terraform validate

      - uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: latest

      - name: 'Terraform Plan'
        run: terraform plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Setup SSH Key'
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      stage-approval:
      name: 'Wait for Stage Approval'
      if: github.ref == 'refs/heads/stage' && github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'stage-approved'
      runs-on: ubuntu-latest
      needs: terraform-tests
      steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup SSH Key'
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      prod-deployment:
      name: 'Production Deployment'
      if: github.ref == 'refs/heads/prod' && github.event.pull_request.merged == true
      runs-on: ubuntu-latest
      needs: stage-approval
      steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
      - name: 'Terraform Apply for Prod'
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}